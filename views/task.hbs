<div class="row">
  <div class="col">
    <h5>{{data.title}}</h5>
  </div>
</div>

<div class="row">
  <div class="col-lg-4" id="chatbox">
    <div class="card">

      <div id="video-container">
        <video autoplay id="second-video"></video>
        <video autoplay muted="true" id="my-video"></video>

        <div id="step2" class="p-3">
          <p>Your ID: <span id="my-id">...</span></p>

          <div class="input-group">
            <input id="callto-id" type="text" class="form-control" placeholder="Call User ID">
            <div class="input-group-append">
              <a href="#" class="btn btn-success" id="make-call">
                <i class="fa fa-phone"></i>
              </a>
            </div>
          </div>
        </div>

        <div id="step3" class="p-3">
          <p>Talk to <span id="second-id">...</span></p>
          <p>
            <a href="#" class="btn btn-danger" id="end-call">
              <i class="fa fa-phone"></i>
            </a>
          </p>
        </div>
      </div>
    </div>
  </div>


  <div class="col-lg-8">
    <textarea id="code-screen">{{data.content}}</textarea>
  </div>
</div>

<div class="row mt-3">
  <div class="col">
    <div class="card">
      <div class="card-header">CHAT ROOM
        <span class="float-right" id="chatbox-username">
          {{#if user}}
            {{user.name}}
          {{/if}}
        </span>
      </div>

      <div class="card-body">
        <div class="row">
        <div class="col-lg-4">
          <div class="card">
            <div class="card-body">
              <ul id="users-list" class="list-group"></ul>
            </div>
          </div>
        </div>
        <div class="col-lg-8">
          <ul class="list-unstyled" id="chatbox-listMessages"></ul>
        </div>
      </div>
      <div class="card-footer">
        <div class="input-group">
          <input placeholder="Enter Message" id="userMessage" type="text" class="form-control form-control-sm">
          <div class="input-group-append">
            <button class="btn btn-primary" onclick="sendMessage()">SEND</button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>


<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.25.0/codemirror.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.25.0/mode/javascript/javascript.min.js"></script>

<script src="/plugins/ot/ot.js"></script>
<script src="/socket.io/socket.io.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/peerjs/0.3.20/peer.js"></script>

<script>
  var EditorClient = ot.EditorClient;
  var SocketIOAdapter = ot.SocketIOAdapter;
  var CodeMirrorAdapter = ot.CodeMirrorAdapter;
  var taskData = {{{json data}}};

  var roomId = {{{json roomId}}};
  var peerServerConf = {{{json peerServer}}};
  var baseURL = {{{json base}}};

  var socket = io.connect(baseURL);
  var editor = CodeMirror.fromTextArea(document.getElementById("code-screen"), {
    lineNumbers: true,
    theme: "monokai"
  });

  var code = $('#code-screen').val();
  var cmClient;

  function init(str, revision, clients, serverAdapter) {
    if (!code) {
      editor.setValue(str);
    }

    cmClient = window.cmClient = new EditorClient(
      revision, clients, serverAdapter, new CodeMirrorAdapter(editor)
    );
  };

  socket.on('doc', function(obj) {
    init(obj.str, obj.revision, obj.clients, new SocketIOAdapter(socket));
  });

  var username = $("#chatbox-username").val();
  if(username === "") {
    var userId = Math.floor(Math.random() * 9999).toString();
    username = "User" + userId;
    $("#chatbox-username").text(username);
  };

  socket.emit('joinRoom', {room: roomId, username: username});

  socket.on('updateUserList', function(users) {
    console.log(users);
    
    $('#users-list').html(''); // clear list

    users.forEach(function(user) {
      $('#users-list').append(jQuery('<li class="list-group-item"></li>').text(user));
    });

    jQuery('#users').html(ol);
  });

  var userMessage = function(name, text) {
    return ('<li class="media"><div class="media-body">'
    + '<div class="media-body" /><b>' + name + ':</b> ' + text + '</div>'
    + '<hr /></div></li>');
  };

  var sendMessage = function() {
  var userMessage = $('#userMessage').val();
  socket.emit('chatMessage', { message: userMessage, username: username });
    $('#userMessage').val("");
  };

  socket.on('chatMessage', function(data) {
    $('#chatbox-listMessages').append(userMessage(data.username, data.message));
  });

  // compatibility
  navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;

  // PeerJS object
  var peer = new Peer(username + roomId, {
    host: peerServerConf.host,
    port: peerServerConf.port,
    secure: peerServerConf.secure,
    path: '/',
    debug: 3
  });

  peer.on('open', function(){
    $('#my-id').text(peer.id);
  });

  // Receiving a call
  peer.on('call', function(call) {
    navigator.mediaDevices.getUserMedia({ video: true })
      .then(function(localStream) {
        $('#my-video')[0].srcObject = localStream;
        call.answer(localStream)

        call.on('stream', function(remoteStream) {
          $('#second-video')[0].srcObject = remoteStream;
        });

        call.on('close', step2);
        window.existingCall = call;
        step2();
      })
      .catch(function(err) {
        console.log(err);
      });
  });

  peer.on('error', function(err){
    alert(err.message);
    step2();
  });

  // Click handlers setup
  $(function(){
    $('#make-call').click(function(){
      var call = peer.call($('#callto-id').val(), window.localStream);

      call.on('stream', function(remoteStream) {
        $('#second-video')[0].srcObject = remoteStream;
      });

      call.on('close', step2);
      window.existingCall = call;
      step2();
    });

    $('#end-call').click(function(){
      window.existingCall.close();
      step2();
    });

    step1();
  });

  function step1() {
    navigator.mediaDevices.getUserMedia({ audio: true, video: true })
      .then(function(localStream){
        $('#my-video')[0].srcObject = localStream;
        window.localStream = localStream;
        step2();
      })
      .catch(function(err) {
        console.log(err);
      });
  }

  function step2 () {
    $('#step3').hide();
    $('#step2').show();
  }

</script>
